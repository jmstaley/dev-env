if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
   set fileencodings=utf-8,latin1
endif

set t_Co=256

filetype plugin on
set ofu=syntaxcomplete#Complete
set completeopt=longest,menuone
set nocompatible	" Use Vim defaults (much better!)
set bs=2		" allow backspacing over everything in insert mode
set ai			" always set autoindenting on
set viminfo='20,\"50	" read/write a .viminfo file, don't store more
			" than 50 lines of registers
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set tabstop=4		" set tab width
set expandtab   " expand tabs to spaces
set incsearch   " incremental search, starts searching from the first character typed
set hlsearch    " highlight terms searched for
set background=dark " set hightlighting style
set shiftwidth=4    "set > shift to 4 spaces instead of default 8
set wildmenu wildmode=full
set smarttab
set smartindent
set cursorline
syntax on
colorscheme molokai

" My mappings
"
" comment lines out with #
map cl <ESC>:'<,'>s/^/#/g<CR> 

" uncomment lines commented with #
map cu <ESC>:'<,'>s/^#//g<CR> 

" toggle line numbers
map <F12> :set nu!<CR>

" buffer navigation
map <S-h> :bp!<CR>
map <S-l> :bn!<CR>
map <S-b> :ls<CR>

" xml validation using xmllint
map xv <ESC>:%w !xmllint --valid --noout -<CR>

" include useful tab completion plugin
runtime macros/matchit.vim

" Only do this part when compiled with support for autocommands
if has("autocmd")
  " In text files, always limit the width of text to 78 characters
  autocmd BufRead *.txt set tw=78
  " When editing a file, always jump to the last cursor position
  autocmd BufReadPost *
  \ if line("'\"") > 0 && line ("'\"") <= line("$") |
  \   exe "normal g'\"" |
  \ endif
endif

autocmd FileType python setlocal tabstop=4 shiftwidth=4
autocmd FileType python set omnifunc=pythoncomplete#Complete
" remove trailing white space
autocmd FileType python autocmd BufWritePre <buffer> %s/\s\+$//e

autocmd BufEnter *.html set tabstop=2 shiftwidth=2
autocmd BufEnter *.css set tabstop=2 shiftwidth=2
autocmd FileType html,xhtml,css,javascript setlocal tabstop=2 shiftwidth=2

execute pathogen#infect()

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
nnoremap <C-w>E :SyntasticToggleMode<CR>
